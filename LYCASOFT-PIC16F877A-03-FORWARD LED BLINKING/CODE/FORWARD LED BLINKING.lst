

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Oct 22 03:33:06 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\03-FORWARD LED BLINKIN
                                 G\FORWARD LED BLINKING.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\03-FORWARD LED BLINKIN
                                 G\FORWARD LED BLINKING.c"
    45  2007  3F3A               	dw 0X3F3A ;#
    46                           	FNROOT	_main
    47                           	global	_PORTB
    48                           psect	maintext,global,class=CODE,delta=2
    49                           global __pmaintext
    50  07BE                     __pmaintext:
    51  0006                     _PORTB	set	6
    52                           	global	_CARRY
    53  0018                     _CARRY	set	24
    54                           	global	_GIE
    55  005F                     _GIE	set	95
    56                           	global	_TRISB
    57  0086                     _TRISB	set	134
    58                           	global	_EEADR
    59  010D                     _EEADR	set	269
    60                           	global	_EEDATA
    61  010C                     _EEDATA	set	268
    62                           	global	_EECON1
    63  018C                     _EECON1	set	396
    64                           	global	_EECON2
    65  018D                     _EECON2	set	397
    66                           	global	_RD
    67  0C60                     _RD	set	3168
    68                           	global	_WR
    69  0C61                     _WR	set	3169
    70                           	global	_WREN
    71  0C62                     _WREN	set	3170
    72                           	file	"FORWARD LED BLINKING.as"
    73                           	line	#
    74                           psect cinit,class=CODE,delta=2
    75                           global start_initialization
    76  07BA                     start_initialization:
    77                           
    78                           psect cinit,class=CODE,delta=2
    79                           global end_of_initialization
    80                           
    81                           ;End of C runtime variable initialization code
    82                           
    83  07BA                     end_of_initialization:
    84  07BA  0183               clrf status
    85  07BB  120A  118A  2FBE   ljmp _main	;jump to C main() function
    86                           psect	cstackCOMMON,class=COMMON,space=1
    87                           global __pcstackCOMMON
    88  0070                     __pcstackCOMMON:
    89                           	global	?_main
    90  0070                     ?_main:	; 0 bytes @ 0x0
    91                           	global	??_main
    92  0070                     ??_main:	; 0 bytes @ 0x0
    93  0070                     	ds	3
    94                           	global	main@K
    95  0073                     main@K:	; 2 bytes @ 0x3
    96  0073                     	ds	2
    97 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    98 ;;Auto spaces:   Size  Autos    Used
    99 ;; COMMON          14      5       5
   100 ;; BANK0           80      0       0
   101 ;; BANK1           80      0       0
   102 ;; BANK3           96      0       0
   103 ;; BANK2           96      0       0
   104                           
   105 ;;
   106 ;; Pointer list with targets:
   107                           
   108                           
   109                           
   110 ;;
   111 ;; Critical Paths under _main in COMMON
   112 ;;
   113 ;;   None.
   114 ;;
   115 ;; Critical Paths under _main in BANK0
   116 ;;
   117 ;;   None.
   118 ;;
   119 ;; Critical Paths under _main in BANK1
   120 ;;
   121 ;;   None.
   122 ;;
   123 ;; Critical Paths under _main in BANK3
   124 ;;
   125 ;;   None.
   126 ;;
   127 ;; Critical Paths under _main in BANK2
   128 ;;
   129 ;;   None.
   130                           
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   133 ;;
   134                           
   135 ;;
   136 ;;Call Graph Tables:
   137 ;;
   138 ;; ---------------------------------------------------------------------------------
   139 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   140 ;; ---------------------------------------------------------------------------------
   141 ;; (0) _main                                                 5     5      0      45
   142 ;;                                              0 COMMON     5     5      0
   143 ;; ---------------------------------------------------------------------------------
   144 ;; Estimated maximum stack depth 0
   145 ;; ---------------------------------------------------------------------------------
   146                           
   147 ;; Call Graph Graphs:
   148                           
   149 ;; _main (ROOT)
   150 ;;
   151                           
   152 ;; Address spaces:
   153                           
   154 ;;Name               Size   Autos  Total    Cost      Usage
   155 ;;BITCOMMON            E      0       0       0        0.0%
   156 ;;EEDATA             100      0       0       0        0.0%
   157 ;;NULL                 0      0       0       0        0.0%
   158 ;;CODE                 0      0       0       0        0.0%
   159 ;;COMMON               E      5       5       1       35.7%
   160 ;;BITSFR0              0      0       0       1        0.0%
   161 ;;SFR0                 0      0       0       1        0.0%
   162 ;;BITSFR1              0      0       0       2        0.0%
   163 ;;SFR1                 0      0       0       2        0.0%
   164 ;;STACK                0      0       0       2        0.0%
   165 ;;ABS                  0      0       0       3        0.0%
   166 ;;BITBANK0            50      0       0       4        0.0%
   167 ;;BITSFR3              0      0       0       4        0.0%
   168 ;;SFR3                 0      0       0       4        0.0%
   169 ;;BANK0               50      0       0       5        0.0%
   170 ;;BITSFR2              0      0       0       5        0.0%
   171 ;;SFR2                 0      0       0       5        0.0%
   172 ;;BITBANK1            50      0       0       6        0.0%
   173 ;;BANK1               50      0       0       7        0.0%
   174 ;;BITBANK3            60      0       0       8        0.0%
   175 ;;BANK3               60      0       0       9        0.0%
   176 ;;BITBANK2            60      0       0      10        0.0%
   177 ;;BANK2               60      0       0      11        0.0%
   178 ;;DATA                 0      0       0      12        0.0%
   179                           
   180                           	global	_main
   181                           psect	maintext
   182                           
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 7 in file "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\03-FORWARD LED BLINKING\FORWARD LED BLI
       NKING.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  K               2    3[COMMON] int 
   190 ;; Return value:  Size  Location     Type
   191 ;;		None               void
   192 ;; Registers used:
   193 ;;		wreg, status,2, btemp+1
   194 ;; Tracked objects:
   195 ;;		On entry : 17F/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   199 ;;      Params:         0       0       0       0       0
   200 ;;      Locals:         2       0       0       0       0
   201 ;;      Temps:          3       0       0       0       0
   202 ;;      Totals:         5       0       0       0       0
   203 ;;Total ram usage:        5 bytes
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           psect	maintext
   211                           	file	"D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\03-FORWARD LED BLINK
                                 ING\FORWARD LED BLINKING.c"
   212                           	line	7
   213                           	global	__size_of_main
   214  0042                     	__size_of_main	equ	__end_of_main-_main
   215                           	
   216  07BE                     _main:	
   217                           	opt	stack 8
   218                           ; Regs used in _main: [wreg+status,2+btemp+1]
   219                           	line	9
   220                           	
   221  07BE                     l2596:	
   222                           ;FORWARD LED BLINKING.c: 8: int K;
   223                           ;FORWARD LED BLINKING.c: 9: TRISB=0X00;
   224  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
   225  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
   226  07C0  0186               	clrf	(134)^080h	;volatile
   227                           	line	10
   228                           ;FORWARD LED BLINKING.c: 10: PORTB=0X00;
   229  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   230  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   231  07C3  0186               	clrf	(6)	;volatile
   232                           	line	12
   233                           	
   234  07C4                     l2598:	
   235                           ;FORWARD LED BLINKING.c: 12: K=0x01;
   236  07C4  3001               	movlw	low(01h)
   237  07C5  00F3               	movwf	(main@K)
   238  07C6  3000               	movlw	high(01h)
   239  07C7  00F4               	movwf	((main@K))+1
   240  07C8  2FC9               	goto	l2600
   241                           	line	14
   242                           ;FORWARD LED BLINKING.c: 14: while(1)
   243                           	
   244  07C9                     l687:	
   245                           	line	16
   246                           	
   247  07C9                     l2600:	
   248                           ;FORWARD LED BLINKING.c: 15: {
   249                           ;FORWARD LED BLINKING.c: 16: PORTB=K;
   250  07C9  0873               	movf	(main@K),w
   251  07CA  1283               	bcf	status, 5	;RP0=0, select bank0
   252  07CB  1303               	bcf	status, 6	;RP1=0, select bank0
   253  07CC  0086               	movwf	(6)	;volatile
   254                           	line	17
   255                           	
   256  07CD                     l2602:	
   257                           ;FORWARD LED BLINKING.c: 17: _delay((unsigned long)((1000)*(20e6/4000.0)));
   258                           	opt asmopt_off
   259  07CD  301A               movlw  26
   260  07CE  00F2               movwf	((??_main+0)+0+2),f
   261  07CF  305E               movlw	94
   262  07D0  00F1               movwf	((??_main+0)+0+1),f
   263  07D1  3086               	movlw	134
   264  07D2  00F0               movwf	((??_main+0)+0),f
   265  07D3                     u2247:
   266  07D3  0BF0               	decfsz	((??_main+0)+0),f
   267  07D4  2FD3               	goto	u2247
   268  07D5  0BF1               	decfsz	((??_main+0)+0+1),f
   269  07D6  2FD3               	goto	u2247
   270  07D7  0BF2               	decfsz	((??_main+0)+0+2),f
   271  07D8  2FD3               	goto	u2247
   272  07D9  0064               	clrwdt
   273                           opt asmopt_on
   274                           
   275                           	line	18
   276                           	
   277  07DA                     l2604:	
   278                           ;FORWARD LED BLINKING.c: 18: K=K<<1;
   279  07DA  0874               	movf	(main@K+1),w
   280  07DB  00F1               	movwf	(??_main+0)+0+1
   281  07DC  0873               	movf	(main@K),w
   282  07DD  00F0               	movwf	(??_main+0)+0
   283  07DE  3001               	movlw	01h
   284  07DF  00FF               	movwf	btemp+1
   285  07E0                     u2225:
   286  07E0  1003               	clrc
   287  07E1  0DF0               	rlf	(??_main+0)+0,f
   288  07E2  0DF1               	rlf	(??_main+0)+1,f
   289  07E3  0BFF               	decfsz	btemp+1,f
   290  07E4  2FE0               	goto	u2225
   291  07E5  0870               	movf	0+(??_main+0)+0,w
   292  07E6  00F3               	movwf	(main@K)
   293  07E7  0871               	movf	1+(??_main+0)+0,w
   294  07E8  00F4               	movwf	(main@K+1)
   295                           	line	19
   296                           	
   297  07E9                     l2606:	
   298                           ;FORWARD LED BLINKING.c: 19: if(K>0X80)
   299  07E9  0874               	movf	(main@K+1),w
   300  07EA  3A80               	xorlw	80h
   301  07EB  00FF               	movwf	btemp+1
   302  07EC  3080               	movlw	(high(081h))^80h
   303  07ED  027F               	subwf	btemp+1,w
   304  07EE  1D03               	skipz
   305  07EF  2FF2               	goto	u2235
   306  07F0  3081               	movlw	low(081h)
   307  07F1  0273               	subwf	(main@K),w
   308  07F2                     u2235:
   309                           
   310  07F2  1C03               	skipc
   311  07F3  2FF5               	goto	u2231
   312  07F4  2FF6               	goto	u2230
   313  07F5                     u2231:
   314  07F5  2FC9               	goto	l2600
   315  07F6                     u2230:
   316                           	line	21
   317                           	
   318  07F6                     l2608:	
   319                           ;FORWARD LED BLINKING.c: 20: {
   320                           ;FORWARD LED BLINKING.c: 21: K=0X01;
   321  07F6  3001               	movlw	low(01h)
   322  07F7  00F3               	movwf	(main@K)
   323  07F8  3000               	movlw	high(01h)
   324  07F9  00F4               	movwf	((main@K))+1
   325  07FA  2FC9               	goto	l2600
   326                           	line	22
   327                           	
   328  07FB                     l688:	
   329  07FB  2FC9               	goto	l2600
   330                           	line	23
   331                           	
   332  07FC                     l689:	
   333                           	line	14
   334  07FC  2FC9               	goto	l2600
   335                           	
   336  07FD                     l690:	
   337                           	line	24
   338                           	
   339  07FD                     l691:	
   340                           	global	start
   341  07FD  120A  118A  2800   	ljmp	start
   342                           	opt stack 0
   343                           GLOBAL	__end_of_main
   344  0800                     	__end_of_main:
   345 ;; =============== function _main ends ============
   346                           
   347                           	signat	_main,88
   348                           psect	maintext
   349                           	global	btemp
   350  007E                     	btemp set 07Eh
   351                           
   352                           	DABS	1,126,2	;btemp
   353                           	global	wtemp0
   354  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Oct 22 03:33:06 2018

                  _RD 0C60                    _WR 0C61                   l690 07FD                   l691 07FD  
                 l687 07C9                   l688 07FB                   l689 07FC                   _GIE 005F  
                l2600 07C9                  l2602 07CD                  l2604 07DA                  l2606 07E9  
                l2608 07F6                  l2596 07BE                  l2598 07C4                  u2230 07F6  
                u2231 07F5                  u2225 07E0                  u2235 07F2                  u2247 07D3  
                _WREN 0C62                  _main 07BE                  btemp 007E                  start 0000  
               ?_main 0070                 _EEADR 010D                 _CARRY 0018                 _PORTB 0006  
               _TRISB 0086                 main@K 0073                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0070                _EEDATA 010C                _EECON1 018C  
              _EECON2 018D        __pcstackCOMMON 0070            __pmaintext 07BE  end_of_initialization 07BA  
 start_initialization 07BA         __size_of_main 0042  
